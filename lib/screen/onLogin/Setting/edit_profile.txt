class EditProfile extends StatefulWidget {
   EditProfile({super.key});

  @override
  
  State<EditProfile> createState() => _EditProfileState();
}
 UserInfoController userInfoController = Get.put(UserInfoController());
 
final _picker = ImagePicker();

String imagepath = ""; //  for the path of my image
String base64String = "";
String fileExtension = "";
Uint8List _image = Base64Decoder().convert('');

class _EditProfileState extends State<EditProfile> {
  
 
  LoginController loginController = Get.put(LoginController());
  AddressController addressController = Get.put(AddressController());
  UpdateUserController updateUserController = Get.put(UpdateUserController());
  AppController appController = Get.put(AppController());


   final userNameController = TextEditingController(text: userInfoController.userInfo!.data![0].userName ?? '');
   final firstNameController = TextEditingController(text: userInfoController.userInfo!.data![0].firstName ?? '');
   final lastNameController = TextEditingController(text: userInfoController.userInfo!.data![0].lastName ?? '');
   final emailAddrController = TextEditingController(text: userInfoController.userInfo!.data![0].emailAddr ?? '');
   final birthdayController = TextEditingController(text: userInfoController.userInfo!.data![0].dob ?? '');
  
 
   String province = userInfoController.userInfo!.data![0].province ?? '';
   String district =userInfoController.userInfo!.data![0].district ?? '';
   String village=userInfoController.userInfo!.data![0].village ?? '';
  final DateTime _dateTime = DateTime.now();
  int _gropRadioVal = userInfoController.userInfo!.data![0].gender == 'M' ? 0 : 1;
  int villageId = 0;

 
@override
  Widget build(BuildContext context) {
    print(box.read('otp'));
   
    return Scaffold(
        backgroundColor: primaryColor,
        appBar: AppBar(
            flexibleSpace: Container(
              decoration: const BoxDecoration(
                gradient: LinearGradient(
                  colors: [gra, dient],
                ),
              ),
            ),
            centerTitle: true,
            title: const Text("ຂໍ້ມູນສ່ວນຕົວ",
                style: TextStyle(color: Colors.white))),
        body: GestureDetector(
          behavior: HitTestBehavior.opaque,
          onTap: () => FocusScope.of(context).requestFocus(FocusNode()),
          child: SingleChildScrollView(
            child: Column(
              children: [
                Padding(
                  padding: const EdgeInsets.only(bottom: 10),
                  child: Stack(
                    alignment: Alignment.center,
                    children: [
                      Obx(() => appController.isLoading.value
                          ? const Center(
                              child: CircularProgressIndicator(),
                            )
                          : Container(
                              width: Get.width,
                              height: 200,
                              color: Colors.brown,
                              child: Image.memory(
                                fit: BoxFit.cover,
                                height: double.infinity,
                                width: double.infinity,
                                alignment: Alignment.center,
                                Base64Decoder().convert(appController
                                    .backgroundImageModel!.bgImage!),
                              ),
                            )),
                      // Obx(() => userInfoController.isLoading.value
                      //     ? const Center(
                      //         child: CircularProgressIndicator(),
                      //       )
                      //     : userInfoController
                      //                     .userInfo!.data?[0].userImageUrl ==
                      //                 null ||
                      //             userInfoController
                      //                     .userInfo!.data?[0].userImageUrl ==
                      //                 ""
                      //         ? Column(
                      //             mainAxisAlignment: MainAxisAlignment.center,
                      //             children: [
                      //               Container(
                      //                 decoration: BoxDecoration(
                      //                   borderRadius: BorderRadius.circular(10),
                      //                   color: primaryColor,
                      //                 ),
                      //                 child: Icon(Icons.account_circle_outlined,
                      //                     size: 100, color: icolor),
                      //               ),
                      //               Center(
                      //                 child: RichText(
                      //                   text: TextSpan(
                      //                     // Note: Styles for TextSpans must be explicitly defined.
                      //                     // Child text spans will inherit styles from parent
                      //                     style: const TextStyle(
                      //                       fontSize: 18.0,
                      //                       color: Colors.white,
                      //                     ),
                      //                     children: [
                      //                       WidgetSpan(
                      //                         child: InkWell(
                      //                             onTap: () =>
                      //                                 _choiceDialogImage(),
                      //                             child: Text(
                      //                               'ອັບໂຫຼດຮູບ',
                      //                               style: TextStyle(
                      //                                   color: primaryColor,
                      //                                   fontSize: 16),
                      //                             )),
                      //                       ),
                      //                       WidgetSpan(
                      //                         child: InkWell(
                      //                           onTap: () =>
                      //                               _choiceDialogImage(),
                      //                           child: Icon(
                      //                             Icons.camera_alt,
                      //                             color: primaryColor,
                      //                             size: 22,
                      //                           ),
                      //                         ),
                      //                       ),
                      //                     ],
                      //                   ),
                      //                 ),
                      //               ),
                      //             ],
                      //           )
                      //         : SingleChildScrollView(
                      //             physics: const NeverScrollableScrollPhysics(),
                      //             child: Column(
                      //               mainAxisAlignment: MainAxisAlignment.center,
                      //               children: [
                      //                 Column(
                      //                   mainAxisAlignment:
                      //                       MainAxisAlignment.center,
                      //                   children: [
                      //                     CircleAvatar(
                      //                       radius: 75,
                      //                       backgroundImage: NetworkImage(
                      //                         scale: 1,
                      //                         userInfoController.userInfo!
                      //                                 .data?[0].userImageUrl ??
                      //                             '',
                      //                       ),
                      //                     ),
                      //                     Center(
                      //                       child: RichText(
                      //                         text: TextSpan(
                      //                           // Note: Styles for TextSpans must be explicitly defined.
                      //                           // Child text spans will inherit styles from parent
                      //                           style: const TextStyle(
                      //                             fontSize: 18.0,
                      //                             color: Colors.white,
                      //                           ),
                      //                           children: [
                      //                             WidgetSpan(
                      //                               child: InkWell(
                      //                                   onTap: () =>
                      //                                       _choiceDialogImage(),
                      //                                   child: Text(
                      //                                     'ອັບໂຫຼດຮູບ',
                      //                                     style: TextStyle(
                      //                                         color:
                      //                                             primaryColor,
                      //                                         fontSize: 16),
                      //                                   )),
                      //                             ),
                      //                             WidgetSpan(
                      //                               child: InkWell(
                      //                                 onTap: () =>
                      //                                     _choiceDialogImage(),
                      //                                 child: Icon(
                      //                                   Icons.camera_alt,
                      //                                   color: primaryColor,
                      //                                   size: 22,
                      //                                 ),
                      //                               ),
                      //                             ),
                      //                           ],
                      //                         ),
                      //                       ),
                      //                     ),
                      //                   ],
                      //                 ),
                      //               ],
                      //             ),
                      //           ))
                    ],
                  ),
                ),
                buildForm(
                    userNameController,
                    firstNameController,
                    lastNameController,
                    emailAddrController,
                    birthdayController,
                    context,
                    _dateTime,
                    province,
                    district,
                    village,
                   ),
              ],
            ),
          ),
        ));
  }

  Padding buildForm(
      TextEditingController userNameController,
      TextEditingController firstNameController,
      TextEditingController lastNameController,
      TextEditingController emailAddrController,
      TextEditingController birthDateController,
      BuildContext context,
      DateTime _dateTime,
      String province,
      String district,
      String village,
    ) {
    return Padding(
      padding: const EdgeInsets.only(left: 16, right: 16),
      child: Form(
        child: Column(
          children: [
            CustomContainer1(
                title: const Text("ຊື່ຜູ້ໃຊ້",
                    style: TextStyle(color: Colors.black)),
                child: TextFormField(
                  style: TextStyle(color: Colors.black),
                  controller: userNameController,
                  decoration: const InputDecoration(
                    border: InputBorder.none,
                    prefixIcon: Icon(Icons.account_circle_outlined),
                  ),
                )),
            CustomContainer1(
                title: const Text("ຊື່", style: TextStyle(color: Colors.black)),
                child: TextFormField(
                  style: TextStyle(color: Colors.black),
                  controller: firstNameController,
                  decoration: const InputDecoration(
                    border: InputBorder.none,
                    prefixIcon: Icon(Icons.person),
                  ),
                )),
            CustomContainer1(
                title: const Text("ນາມສະກຸນ",
                    style: TextStyle(color: Colors.black)),
                child: TextFormField(
                  style: TextStyle(color: Colors.black),
                  controller: lastNameController,
                  decoration: const InputDecoration(
                    border: InputBorder.none,
                    prefixIcon: Icon(Icons.person),
                  ),
                )),
            CustomContainer1(
              title: const Text(
                "ວັນທີເດືອນປີເກີດ",
                style: TextStyle(color: Colors.black),
              ),
              child: TextFormField(
                style: TextStyle(color: Colors.black),
                controller: birthDateController,
                // readOnly: true,
                textAlignVertical: TextAlignVertical.center,
                decoration: InputDecoration(
                  fillColor: textColor,
                  hoverColor: textColor,
                  border: InputBorder.none,
                  contentPadding: const EdgeInsets.only(left: 10),
                  suffixIcon: IconButton(
                    onPressed: () async {
                      showCupertinoModalPopup<void>(
                        context: context,
                        builder: (BuildContext context) {
                          return Container(
                            height: 500,
                            child: Padding(
                              padding: const EdgeInsets.all(16.0),
                              child: Column(
                                children: [
                                  Container(
                                    decoration: BoxDecoration(
                                      borderRadius: BorderRadius.circular(
                                          30), // radius of 10
                                      gradient: const LinearGradient(
                                          colors: [gra, dient]),
                                    ),
                                    height: 400,
                                    child: CupertinoDatePicker(
                                      mode: CupertinoDatePickerMode.date,
                                      initialDateTime: _dateTime,
                                      onDateTimeChanged: (dateTime) {
                                        _dateTime = dateTime;
                                        birthDateController.text =
                                            fmdate.format(_dateTime);
                                        // print(_dateTime);
                                        // print(birthDateController.text);
                                      },
                                    ),
                                  ),
                                  SizedBox(
                                    height: 10,
                                  ),
                                  ElevatedButton(
                                    style: ElevatedButton.styleFrom(
                                        padding: EdgeInsets.zero,
                                        shape: RoundedRectangleBorder(
                                            borderRadius:
                                                BorderRadius.circular(20))),
                                    child: Ink(
                                      decoration: BoxDecoration(
                                          gradient: const LinearGradient(
                                              colors: [gra, dient]),
                                          borderRadius:
                                              BorderRadius.circular(20)),
                                      child: Container(
                                        alignment: Alignment.center,
                                        child: const Text(
                                          'ເລືອກ',
                                          style: TextStyle(color: primaryColor),
                                        ),
                                      ),
                                    ),
                                    onPressed: () =>
                                        Navigator.of(context).pop(),
                                  )
                                ],
                              ),
                            ),
                          );
                        },
                      );
                    },
                    icon: const Icon(Icons.date_range),
                  ),
                ),
              ),
            ),
            CustomContainer1(
                title: const Text("ເພດ", style: TextStyle(color: Colors.black)),
                child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                    children: [
                      Row(children: [
                        Radio(
                            value: 0,
                            activeColor: textColor,
                            groupValue: _gropRadioVal,
                            onChanged: (int? value) {
                              if (value != null) {
                                setState(() {
                                  _gropRadioVal = value;
                                });
                              }
                            }),
                        const Text("ຊາຍ", style: TextStyle(color: Colors.black))
                      ]),
                      Row(children: [
                        Radio(
                            value: 1,
                            activeColor: textColor,
                            groupValue: _gropRadioVal,
                            onChanged: (int? value) {
                              if (value != null) {
                                setState(() {
                                  _gropRadioVal = value;
                                });
                              }
                            }),
                        const Text('ຍິງ', style: TextStyle(color: Colors.black))
                      ])
                    ])),
            Obx(() => addressController.isLoading.value
                ? Center(
                    child: CircularProgressIndicator(),
                  )
                : CustomContainer1(
                    title: const Text("ແຂວງ",
                        style: TextStyle(color: Colors.black)),
                    child: Theme(
                      data: ThemeData(
                          textTheme: TextTheme(
                              titleMedium: TextStyle(color: Colors.black))),
                      child: Padding(
                        padding: const EdgeInsets.only(left: 8),
                        child: DropdownSearch<String>(
                          mode: Mode.MENU,
                          showSearchBox: true,
                          showSelectedItems: true,
                          selectedItem: province,
                          maxHeight: Get.height / 1.4,
                          searchFieldProps: const TextFieldProps(
                              style: TextStyle(color: Colors.black),
                              decoration: InputDecoration(
                                  helperText: 'ເລືອກແຂວງ',
                                  hintText: 'ຄົ້ນຫາ',
                                  suffixIcon: Icon(Icons.search_rounded))),
                          dropdownSearchDecoration:
                              const InputDecoration(border: InputBorder.none),
                          items: addressController.provinceModel?.data!
                              .map((e) => e.provinceName)
                              .toList(),

                          // compareFn: (String? i, String? s) => (i == s) ? true : false,
                          onChanged: (value) {
                            for (var element
                                in addressController.provinceModel!.data!) {
                              if (element.provinceName == value) {
                                int provinceId = int.parse(element.provinceId!);
                                print(provinceId);
                                addressController.fetchDistrict(provinceId);

                                return;
                              }
                            }
                          },
                        ),
                      ),
                    ))),
            Obx(() => addressController.isLoading1.value
                ? Center(
                    child: CircularProgressIndicator(),
                  )
                : CustomContainer1(
                    title: const Text("ເມືອງ",
                        style: TextStyle(color: Colors.black)),
                    child: Theme(
                      data: ThemeData(
                          textTheme: TextTheme(
                              titleMedium: TextStyle(color: Colors.black))),
                      child: Padding(
                        padding: const EdgeInsets.only(left: 8),
                        child: DropdownSearch<String>(
                            mode: Mode.MENU,
                            showSearchBox: true,
                            showSelectedItems: true,
                            selectedItem: district,
                            maxHeight: Get.height / 1.4,
                            searchFieldProps: const TextFieldProps(
                                style: TextStyle(color: Colors.black),
                                decoration: InputDecoration(
                                    helperText: 'ເລືອກເມືອງ',
                                    hintText: 'ຄົ້ນຫາ',
                                    suffixIcon: Icon(Icons.search_rounded))),
                            dropdownSearchDecoration:
                                const InputDecoration(border: InputBorder.none),
                            items: addressController.districtModel?.data!
                                .map((e) => e.districtName!)
                                .toList(),

                            // compareFn: (String? i, String? s) => (i == s) ? true : false,
                            onChanged: (value) {
                              for (var element
                                  in addressController.districtModel!.data!) {
                                if (element.districtName == value) {
                                  int districtId =
                                      int.parse(element.districtId!);
                                  print(districtId);
                                  addressController.fetchVillage(districtId);
                                  return;
                                }
                              }
                            }),
                      ),
                    ))),
            Obx(() => addressController.isLoading2.value
                ? Center(
                    child: CircularProgressIndicator(),
                  )
                : CustomContainer1(
                    title: const Text("ບ້ານ",
                        style: TextStyle(color: Colors.black)),
                    child: Theme(
                      data: ThemeData(
                          textTheme: TextTheme(
                              titleMedium: TextStyle(color: Colors.black))),
                      child: Padding(
                        padding: const EdgeInsets.only(left: 8),
                        child: DropdownSearch<String>(
                            mode: Mode.MENU,
                            showSearchBox: true,
                            showSelectedItems: true,
                            selectedItem: village,
                            maxHeight: Get.height / 1.4,
                            searchFieldProps: const TextFieldProps(
                                style: TextStyle(color: Colors.black),
                                decoration: InputDecoration(
                                    helperText: 'ເລືອກບ້ານ',
                                    hintText: 'ຄົ້ນຫາ',
                                    suffixIcon: Icon(Icons.search_rounded))),
                            dropdownSearchDecoration:
                                const InputDecoration(border: InputBorder.none),
                            items: addressController.villageModel?.data!
                                .map((e) => e.villageName!)
                                .toList(),

                            // compareFn: (String? i, String? s) => (i == s) ? true : false,
                            onChanged: (value) {
                              for (var element
                                  in addressController.villageModel!.data!) {
                                if (element.villageName == value) {
                                  villageId = int.parse(element.villageId!);
                                  print(villageId);

                                  return;
                                }
                              }
                            }),
                      ),
                    ))),
            CustomContainer1(
                title:
                    const Text("ເບີໂທ", style: TextStyle(color: Colors.black)),
                child: TextFormField(
                  style: TextStyle(color: Colors.black),
                  keyboardType: TextInputType.phone,
                  controller: userNameController,
                  decoration: const InputDecoration(
                    border: InputBorder.none,
                    prefixIcon: Icon(Icons.phone),
                  ),
                )),
            CustomContainer1(
                title:
                    const Text("ອີເມລ", style: TextStyle(color: Colors.black)),
                child: TextFormField(
                  style: TextStyle(color: Colors.black),
                  keyboardType: TextInputType.emailAddress,
                  controller: emailAddrController,
                  decoration: const InputDecoration(
                    border: InputBorder.none,
                    prefixIcon: Icon(Icons.email_outlined),
                  ),
                )),
            Padding(
                padding: const EdgeInsets.only(
                  bottom: 20,
                ),
                child: ElevatedButton(
                  onPressed: () async {
                    await buildEditUser(
                        userNameController,
                        firstNameController,
                        lastNameController,
                        _dateTime,
                        _gropRadioVal,
                        emailAddrController,
                        villageId);
                    Get.back();
                  },
                  style: ElevatedButton.styleFrom(
                      padding: EdgeInsets.zero,
                      shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(20))),
                  child: Ink(
                    decoration: BoxDecoration(
                        gradient: const LinearGradient(colors: [gra, dient]),
                        borderRadius: BorderRadius.circular(20)),
                    child: Container(
                      width: 400,
                      height: 100,
                      alignment: Alignment.center,
                      child: const Text(
                        'ບັນທຶກ',
                        style: TextStyle(color: primaryColor),
                      ),
                    ),
                  ),
                ))
          ],
        ),
      ),
    );
  }

  Future<void> buildEditUser(
      TextEditingController userNameController,
      TextEditingController firstNameController,
      TextEditingController lastNameController,
      _dateTime,
      int _gropRadioVal,
      TextEditingController emailController,
      int villageId) async {
    print('---------------------------------');
    print(base64String);
    print(extention);
    print(userNameController.text);
    print(firstNameController.text);
    print(lastNameController.text);
    print(_dateTime);
    print(_gropRadioVal == 0 ? 'M' : 'F');
    print(extention);

    await updateUserController.postUpdateUser(
        userName: userNameController.text,
        firstName: firstNameController.text,
        lastName: lastNameController.text,
        dob: _dateTime.toString(),
        gender: _gropRadioVal == 0 ? 'M' : 'F',
        emailAddr: emailController.text,
        villageCode: villageId.toString(),
        userImage: base64String,
        userImageExtention: extention);

    await loginController.postLogin(
        publickey: publickey,
        mobileNumber: userNameController.text,
        otp: box.read('otp'),
        device_token: '',
        os_version: "");
  }

  Future<ImageSource?> _choiceDialogImage() {
    return showDialog<ImageSource>(
        context: context,
        builder: (_context) {
          return AlertDialog(
            content: SizedBox(
              height: 100,
              width: 40,
              child: Row(
                mainAxisSize: MainAxisSize.min,
                mainAxisAlignment: MainAxisAlignment.center,
                crossAxisAlignment: CrossAxisAlignment.center,
                children: [
                  Flexible(
                      flex: 1,
                      child: Column(
                        mainAxisSize: MainAxisSize.min,
                        children: [
                          IconButton(
                              onPressed: () {
                                Navigator.pop(context);
                                _pickerImage(ImageSource.camera);
                              },
                              icon: const Icon(Icons.camera_alt_rounded,
                                  color: icolor)),
                          const Text(
                            "ກ້ອງຖ່າຍ",
                            style: TextStyle(color: Colors.black),
                          ),
                        ],
                      )),
                  const Spacer(),
                  Flexible(
                      flex: 1,
                      child: Column(
                        mainAxisSize: MainAxisSize.min,
                        children: [
                          IconButton(
                              onPressed: () {
                                Navigator.pop(context);
                                _pickerImage(ImageSource.gallery);
                              },
                              icon: const Icon(Icons.image_rounded,
                                  color: icolor)),
                          const Text('ຮູບພາບ',
                              style: TextStyle(color: Colors.black)),
                        ],
                      ))
                ],
              ),
            ),
          );
        });
  }

  String extention = "";
  Future<void> _pickerImage(ImageSource source) async {
    final pick = await _picker.pickImage(source: source);
    if (pick != null) {
      imagepath = pick.path;
      print(
          imagepath); // /data/user/0/com.example.imagedecoding/cache/image_picker4858479242096916017.png
      String fileExtension = p.extension(imagepath);
      extention = fileExtension.substring(1);
      print(extention);
      // now convert it into a file and then numbers or bytes
      File imagefile = File(imagepath);
      // now converting into numbers

      Uint8List imagebytes = await imagefile.readAsBytes();
      print(imagebytes); // 38439849384

      // now convert it into string
      base64String = base64.encode(imagebytes); // asdfjaklsdfjl//asdfasd348309
      print(base64String);
      setState(() {
        _image = Base64Decoder().convert(base64String);
        box.write('userImage', base64String);
      });
      // now we can save it into database
    } else {
      print('No image is selected');
    }
  }
}
